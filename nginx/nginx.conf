events {
  worker_connections  1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Enable gzip compression
  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;  # Compression level (1 = least compression, 9 = most)
  gzip_types 
    application/javascript
    application/json
    font/woff2
    image/jpg
    image/png
    image/webp
    image/x-icon
    text/css
    text/plain;

  # Set up real IP detection
  set_real_ip_from 0.0.0.0/0;
  real_ip_header X-Forwarded-For;
  real_ip_recursive on;

  # Redirect from azurespeed.com to www.azurespeed.com
  server {
    listen 80;
    server_name azurespeed.com;
    return 301 https://www.azurespeed.com$request_uri;
  }

  server {
    listen 80;
    server_name www.azurespeed.com;

    # Specific 301 redirects
    location = / {
      return 301 https://www.azurespeed.com/Azure/Latency;
    }
    location = /Cloud/RegionFinder {
      return 301 https://www.azurespeed.com/Azure/IPLookup;
    }
    location = /ChatGPT/AppList {
      return 301 https://www.azurespeed.com/ChatGPT/WritingAssistant;
    }
    location = /Information/AzureIpRanges {
      return 301 https://www.azurespeed.com/Information/AzureIpRanges/AzureCloud;
    }
    location = /Information/IpRange {
      return 301 https://www.azurespeed.com/Information/AzureIpRanges/AzureCloud;
    }

    location / {
      root /usr/share/nginx/html;
      index index.html;
      try_files $uri $uri/index.html /index.html;

      # Browser Caching for static assets
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
      }
    }

    location /api {
      proxy_pass     http://localhost:8080;
      proxy_http_version 1.1;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection keep-alive;
      proxy_set_header   Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
    }
  }
}